<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.p2p.dao.TWithdrawCashDao">
	<select id="selectTWithDrawCashDtoList" resultType="TWithdrawCashDtoAlias">
		select a.*,b.userName as userName,b.cellPhone as cellPhone,c.realName as realName 
		from t_withdraw_cash a left join c_user b on a.userId = b.id
		left join t_person c on a.userId = c.userId where 1=1
		<if test="userName != null and userName != ''"> and userName like "%"#{userName}"%"</if>
     	<if test="cellPhone != null and cellPhone != ''"> and cellPhone like "%"#{cellPhone}"%"</if>
     	<if test="realName != null and realName != ''"> and realName like "%"#{realName}"%"</if>
     	<if test="withdrawStatus != null "> and withdrawStatus = #{withdrawStatus}</if>
		order by a.createTime desc
	</select>
	
	<select id="selectTWithDrawCashDtoDeatil" resultType="TWithdrawCashDtoAlias" parameterType="java.lang.Long">
		select a.*,b.userName as userName,b.cellPhone as cellPhone,c.realName as realName 
		from t_withdraw_cash a left join c_user b on a.userId = b.id
		left join t_person c on a.userId = c.userId
		where a.id=#{id}
	</select>
	
	<select id="selectWithdraw" resultType="TWithdrawCashAlias">
		select a.*,b.bankName as bankName from t_withdraw_cash a left join t_bank_card b on a.bankCardId=b.bankCardNo 
		where a.userId=#{userId}
		<if test="createTime != null"> and <![CDATA[  a.createTime >= #{createTime} ]]> </if>
		order by a.createTime desc
	</select>
	
	<select id="selectwithdrawforordid" resultType="TWithdrawCashAlias">
		select * from t_withdraw_cash where ordId=#{ordId}
	</select>
	
	<update id="updatewithdrawtwo">
		update t_withdraw_cash set withdrawStatus=2 where ordId=#{ordId} and withdrawStatus=1
	</update>
	<update id="updatewithdrawthree">
		update t_withdraw_cash set withdrawStatus=3 where ordId=#{ordId} and withdrawStatus=2
	</update>
	<update id="updatewithdrawfour">
		update t_withdraw_cash set withdrawStatus=4 where ordId=#{ordId} and withdrawStatus=2
	</update>
	<select id="selectWithdrawList" resultType="TWithdrawCashAlias">
		select ordId from t_withdraw_cash where withdrawStatus=#{withdrawStatus}
	</select>
	
	<select id="selecttwithdrwafortime" resultType="java.math.BigDecimal">
		<![CDATA[
		select sum(withdrawAmount) as withdrawAmount  from t_withdraw_cash a where userId=#{userId} and withdrawStatus in (2,3) and DATEDIFF(now(),a.createTime) < 15
		]]>
	</select>
	
	<select id="selectUserIdforOrdid" resultType="TWithdrawCashAlias">
		select * from t_withdraw_cash where ordId=#{ordId}
	</select>
	
	<update id="updateonetofour">
		update t_withdraw_cash set withdrawStatus=4 where ordId=#{ordId} and withdrawStatus=1
	</update>
</mapper>